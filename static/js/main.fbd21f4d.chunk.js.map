{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","cardComponent","map","user","index","SearchBox","props","placeholder","type","onChange","searchChange","Scroll","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","ReactDOM","createRoot","document","getElementById","render"],"mappings":"wOAeeA,EAfF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACxB,OACE,sBAAKC,UAAU,2CAAf,UACE,qBACEC,IAAI,cACJC,IAAG,mCAA8BL,EAA9B,mBAA2CA,KAEhD,gCACE,6BAAKC,IACL,4BAAIC,SAIX,ECIcI,EAdE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACZC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACtC,OACE,cAAC,EAAD,CAEEV,KAAMM,EAAOI,GAAOV,KACpBD,GAAIO,EAAOI,GAAOX,GAClBE,MAAOK,EAAOI,GAAOT,OAHhBS,EAMV,IACD,OAAO,8BAAMH,GACd,ECAcI,EAbG,SAACC,GACjB,OACE,8BACE,uBACEV,UAAU,kCACVW,YAAY,cACZC,KAAK,SACLC,SAAUH,EAAMI,gBAIvB,ECHcC,EARA,SAACL,GACd,OACE,qBAAKM,MAAO,CAAEC,UAAW,SAAUC,OAAQ,MAAOC,OAAQ,SAA1D,SACGT,EAAMU,UAGZ,ECuCcC,G,wDAxCb,aAAe,IAAD,8BACZ,gBAeFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,OAC3C,EAhBC,EAAKC,MAAQ,CACXxB,OAAQ,GACRqB,YAAa,IAJH,CAMb,C,qDAED,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,MAAvB,IACLF,MAAK,SAACG,GACL,EAAKT,SAAS,CAAEpB,OAAQ6B,GACzB,GACJ,G,oBAMD,WACE,MAAgCC,KAAKN,MAA7BxB,EAAR,EAAQA,OAAQqB,EAAhB,EAAgBA,YACVU,EAAiB/B,EAAOgC,QAAO,SAACC,GACpC,OAAOA,EAAMvC,KAAKwC,cAAcC,SAASd,EAAYa,cACtD,IAED,OAAQlC,EAAOoC,OAGb,sBAAKxC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWc,aAAcoB,KAAKZ,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUlB,OAAQ+B,SANtB,2CAUH,K,GAtCeM,cCALC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH,8BACE,cAAC,EAAD,M","file":"static/js/main.fbd21f4d.chunk.js","sourcesContent":["const Card = ({ id, name, email }) => {\r\n  return (\r\n    <div className=\"tc bg-blue dib br3 ma2 grow bw2 shadow-5\">\r\n      <img\r\n        alt=\"Profile Pic\"\r\n        src={`https://robohash.org/tghh${id}?set=set${id}`}\r\n      />\r\n      <div>\r\n        <h1>{name}</h1>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n  const cardComponent = robots.map((user, index) => {\r\n    return (\r\n      <Card\r\n        key={index}\r\n        name={robots[index].name}\r\n        id={robots[index].id}\r\n        email={robots[index].email}\r\n      /> //this code creates an array of Card components and stores them in the cardComponent array\r\n    );\r\n  });\r\n  return <div>{cardComponent}</div>;\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = (props) => {\r\n  return (\r\n    <div>\r\n      <input\r\n        className=\"pa3 ba b--green b-lightest-blue\"\r\n        placeholder=\"robo search\"\r\n        type=\"search\"\r\n        onChange={props.searchChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{ overflowY: \"scroll\", border: \"1px\", height: \"800px\" }}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Component } from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchField: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => response.json())\r\n      .then((users) => {\r\n        this.setState({ robots: users });\r\n      });\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchField: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { robots, searchField } = this.state;\r\n    const filteredRobots = robots.filter((robot) => {\r\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n    });\r\n\r\n    return !robots.length ? (\r\n      <h1>Loading...</h1>\r\n    ) : (\r\n      <div className=\"tc\">\r\n        <h1 className=\"f1\">RoboFriends</h1>\r\n        <SearchBox searchChange={this.onSearchChange} />\r\n        <Scroll>\r\n          <CardList robots={filteredRobots} />\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport \"tachyons\";\r\nimport App from \"./containers/App\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <div>\r\n    <App />\r\n  </div>\r\n);\r\n"],"sourceRoot":""}